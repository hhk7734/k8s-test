---
- name: install required
  apt:
    name: '{{ item }}'
    state: latest
    update_cache: yes
  loop: ['apt-transport-https', 'ca-certificates', 'curl']

- name: add kubernetes GPG apt key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

- name: add kubernetes repository
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg]
      https://apt.kubernetes.io/ kubernetes-xenial main
    filename: kubernetes

- name: install kubeadm kubectl version={{ version }}
  apt:
    name: '{{ item }}={{ version }}'
    update_cache: yes
    force: yes
  loop: ['kubelet', 'kubeadm', 'kubectl']

- name: disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: remove swapfile from /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: add br_netfilter to modules-load.d
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: br_netfilter
    mode: 0644
    create: yes

- name: modprobe br_netfilter
  command: modprobe br_netfilter

- name: add netbridge config ip6
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: 'net.bridge.bridge-nf-call-ip6tables = 1'
    mode: 0644
    create: yes

- name: add netbridge config ip4
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: 'net.bridge.bridge-nf-call-iptables = 1'
    mode: 0644
    create: yes

- name: update sysctl
  command: sysctl --system

- name: initialize the cluster with kubeadm
  shell: kubeadm init --pod-network-cidr=10.235.0.0/16 >> kubeadm_init.txt
  args:
    chdir: /home/{{ ansible_user }}
    creates: kubeadm_init.txt

- name: create /home/{{ ansible_user }}/.kube directory
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    mode: 0755

- name: copy admin.conf to {{ ansible_user }}'s kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: yes
    mode: 0644
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
